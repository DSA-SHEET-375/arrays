https://leetcode.com/problems/maximum-subarray/

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        for i in range(1, len(nums)):
            if nums[i-1] > 0:
                nums[i] += nums[i-1]
        return max(nums)


class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        s=0
        maxs=nums[0]
        for i in range(len(nums)):
            s+=nums[i]
            ms=max(ms,s)
            if s<0:
                s=0
        return ms
        
        
import sys
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        l=len(nums)
        lmax=0    //localmax
        gmax= -sys.maxsize-1     //globalmax
        for i in range(l):
            lmax=max(nums[i],nums[i]+lmax)
            if lmax>gmax:
                gmax=lmax
        return gmax
